cluster.name: {{ cluster_name }}
node.name: {{ hostname | lower }}

{% if inventory_hostname in groups['master'] %}
node.master: true
{% else %}
node.master: false
{% endif %}
{% if inventory_hostname in groups['data'] %}
node.data: true
{% if inventory_hostname in groups['hot-data'] %}
node.attr.tag: hot
{% else %}
node.attr.tag: cold
{% endif %}
{% else %}
node.data: false
{% endif %}
{% if inventory_hostname in groups['ingest'] %}
node.ingest: true
{% else %}
node.ingest: false
{% endif %}

{% if inventory_hostname in lookup('inventory_hostnames', 'ingest:master') %}
path.data: {% for key, value in disks_data.iteritems() %}{{ value }}/{{ el_user }}{% if not loop.last %},{% endif %}{% endfor %}
{% else %}
path.data: {% for key, value in disks_data.iteritems() %}{{ value }}{% if not loop.last %},{% endif %}{% endfor %}
{% endif %}

path.logs: {{ pro_dir }}/logs/{{ cluster_name }}
bootstrap.memory_lock: true
bootstrap.system_call_filter: false
network.host: 0.0.0.0
http.port: {{ es_port }}
#discovery.zen.ping.unicast.hosts: [{% for host in ansible_play_hosts %}"{{ hostvars[host].hostname }}"{% if not loop.last %}, {% endif %}{% endfor %}]
discovery.seed_hosts: [{% for host in groups['master'] %}"{{ hostvars[host].clusterName }}"{% if not loop.last %}, {% endif %}{% endfor %}]
cluster.initial_master_nodes: [{% for host in groups['master'] %}"{{ hostvars[host].hostname }}"{% if not loop.last %}, {% endif %}{% endfor %}]
cluster:
  fault_detection:
    follower_check:
      interval: 30s
      timeout: 300s
      retry_count: 6
    leader_check:
      interval: 30s
      timeout: 300s
      retry_count: 6
  follower_lag:
    timeout: 180s
discovery.zen.minimum_master_nodes: 2
http.cors.enabled: true
http.cors.allow-origin: "*"
transport.compress: true
transport.connect_timeout: 60s
transport.ping_schedule: 60s
action.auto_create_index: true
thread_pool.write.queue_size: 1000
{% if es_ssl == true %}
xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.verification_mode: certificate
xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12
xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12
xpack.notification.email.account:
    exchange_account:
      profile: {{ es_email_profile }}
      email_defaults:
          from: 'tech.sys {{ es_email_user }}'
      smtp:
          auth: true
          starttls.enable: true
          host: smtp.exmail.qq.com
          port: 465
          user: {{ es_email_user }}
  {% endif %}