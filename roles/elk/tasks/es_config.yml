---
  - name: Create {{ el_user }} data and logs
    file:
      name: "{{ item }}"
      state: directory
      owner: "{{ el_user }}"
      group: "{{ el_user }}"
      mode: 0755
    with_items:
      - "{{ path.logs }}"
      - "{{ path.data }}"
    become: yes

  - name: Copy {{ el_user }} master node config files
    template:
      src: "{{ el_user }}.yml"
      dest: /etc/{{ el_user }}/{{ el_user }}.yml
      owner: "{{ el_user }}"
      group: "{{ el_user }}"
    when: inventory_hostname in groups['master']
    become: yes

  - name: Copy {{ el_user }} data node config files
    template:
      src: "hot_{{ el_user }}.yml"
      dest: /etc/{{ el_user }}/{{ el_user }}.yml
      owner: "{{ el_user }}"
      group: "{{ el_user }}"
    when: inventory_hostname in groups['hot-data']
    become: yes

  - name: Copy {{ el_user }} ingest config files
    template:
      src: "ing_{{ el_user }}.yml"
      dest: /etc/{{ el_user }}/{{ el_user }}.yml
      owner: "{{ el_user }}"
      group: "{{ el_user }}"
    when: inventory_hostname in groups['ingest']
    become: yes

  - name: Copy {{ el_user }} ingest config files
    template:
      src: "cold_{{ el_user }}.yml"
      dest: /etc/{{ el_user }}/{{ el_user }}.yml
      owner: "{{ el_user }}"
      group: "{{ el_user }}"
    when: inventory_hostname in groups['cold-data']
    become: yes

  - name: Edit {{ el_user }} Startup configuration file
    lineinfile:
      dest: /usr/lib/systemd/system/{{ el_user }}.service
      regexp: 'LimitMEMLOCK=infinity'
      insertafter: '^Type=notify'
      line: 'LimitMEMLOCK=infinity'
    when: ansible_play_hosts | intersect(groups['Allnode'])
    become: yes

  - name: Settings {{ el_user }} Memory
    lineinfile:
      dest: /etc/{{ el_user }}/jvm.options
      regexp: "{{ item.key }}"
      line: "{{ item.vaule }}"
    with_items:
      - { 'key': '-Xms1g', 'vaule': '-Xms{{ el_memen }}g' }
      - { 'key': '-Xmx1g', 'vaule': '-Xmx{{ el_memen }}g' }
    when: ansible_play_hosts | intersect(groups['Allnode'])
    become: yes

  - name: restart elasticsearch
    systemd:
      name: elasticsearch
      enabled: yes
      state: restarted
      daemon_reload: yes
    when: ansible_play_hosts | intersect(groups['Allnode'])
    become: yes
